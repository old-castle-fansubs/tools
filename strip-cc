#!/usr/bin/env python3
import argparse
import re
from pathlib import Path
from pysubs2 import SSAFile
from ass_tag_parser import parse_ass


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('file', default='-')
    return parser.parse_args()


def main():
    args = parse_args()
    if args.file == '-':
        text = sys.stdin.read()
    else:
        text = Path(args.file).read_text()

    subs = SSAFile.from_string(text)
    lines = []
    for sub in subs:
        # skip furigana
        if sub.style.lower() == 'rubi':
            continue

        text = ''
        for node in parse_ass(sub.text):
            if node['type'] == 'text':
                text += node['text']

        for line in text.split('\\N'):
            line = re.sub('\(.*\)', '', line)  # actors
            line = re.sub('➡', '', line)  # line continuation
            line = re.sub('≪', '', line)  # distant dialogues
            line = re.sub('[＜＞《》]', '', line)
            line = re.sub('｡', '。', line)  # half-width period
            line = re.sub('([…！？])。', r'\1', line)  # superfluous periods
            line = line.rstrip('・')

            line = re.sub(' ', '', line)  # Japanese doesn't need spaces

            if line:
                lines.append(line)

    print('\n'.join(lines))


if __name__ == '__main__':
    main()

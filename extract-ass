#!/usr/bin/env python3
import argparse
import re
import sys
from pathlib import Path
from subprocess import run


class ExtractionError(Exception):
    pass


def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser()
    parser.add_argument("-o", "--output", type=Path, default="-")
    parser.add_argument("source", type=Path)
    return parser.parse_args()


def get_ass_track_id(source_path: Path) -> int:
    result = run(
        ["mkvmerge", "-i", source_path],
        capture_output=True,
        text=True,
        check=True,
    )
    tracks = re.search(
        r"Track ID (\d+): subtitles \(SubStationAlpha\)", result.stdout
    )
    if not tracks:
        raise ExtractionError("No subtiles found in the file")
    return int(tracks.group(1))


def extract_track(source_path: Path, track_id: int) -> bytes:
    result = run(
        [
            "mkvextract",
            "tracks",
            "-r",
            "/dev/null",
            source_path,
            f"{track_id}:/dev/stdout",
        ],
        capture_output=True,
        check=True,
    )
    return result.stdout


def extract_subtitles(source_path: Path) -> str:
    track_id = get_ass_track_id(source_path)
    return extract_track(source_path, track_id).decode()


def check_deps() -> None:
    progs = ["mkvmerge", "mkvextract"]
    for prog in progs:
        try:
            run([prog, "-h"], check=True, capture_output=True, text=True)
        except FileNotFoundError:
            raise ExtractionError(
                "mkvtoolnix must be installed for this script to work"
            )


def main() -> None:
    check_deps()
    args = parse_args()
    ass = extract_subtitles(args.source)
    if str(args.output) == "-":
        print(ass, end="")
    else:
        args.output.write_text(ass)


if __name__ == "__main__":
    try:
        main()
    except ExtractionError as ex:
        print(ex, file=sys.stderr)
